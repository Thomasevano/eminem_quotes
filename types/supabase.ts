/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/albums": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          name?: parameters["rowFilter.albums.name"];
          release_date?: parameters["rowFilter.albums.release_date"];
          cover_url?: parameters["rowFilter.albums.cover_url"];
          author?: parameters["rowFilter.albums.author"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["albums"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** albums */
          albums?: definitions["albums"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          name?: parameters["rowFilter.albums.name"];
          release_date?: parameters["rowFilter.albums.release_date"];
          cover_url?: parameters["rowFilter.albums.cover_url"];
          author?: parameters["rowFilter.albums.author"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.albums.id"];
          name?: parameters["rowFilter.albums.name"];
          release_date?: parameters["rowFilter.albums.release_date"];
          cover_url?: parameters["rowFilter.albums.cover_url"];
          author?: parameters["rowFilter.albums.author"];
        };
        body: {
          /** albums */
          albums?: definitions["albums"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/quotes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.quotes.id"];
          quote?: parameters["rowFilter.quotes.quote"];
          song_id?: parameters["rowFilter.quotes.song_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["quotes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** quotes */
          quotes?: definitions["quotes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.quotes.id"];
          quote?: parameters["rowFilter.quotes.quote"];
          song_id?: parameters["rowFilter.quotes.song_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.quotes.id"];
          quote?: parameters["rowFilter.quotes.quote"];
          song_id?: parameters["rowFilter.quotes.song_id"];
        };
        body: {
          /** quotes */
          quotes?: definitions["quotes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/songs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.songs.id"];
          title?: parameters["rowFilter.songs.title"];
          album_id?: parameters["rowFilter.songs.album_id"];
          listen_url?: parameters["rowFilter.songs.listen_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["songs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** songs */
          songs?: definitions["songs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.songs.id"];
          title?: parameters["rowFilter.songs.title"];
          album_id?: parameters["rowFilter.songs.album_id"];
          listen_url?: parameters["rowFilter.songs.listen_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.songs.id"];
          title?: parameters["rowFilter.songs.title"];
          album_id?: parameters["rowFilter.songs.album_id"];
          listen_url?: parameters["rowFilter.songs.listen_url"];
        };
        body: {
          /** songs */
          songs?: definitions["songs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  albums: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    name: string;
    release_date?: string;
    cover_url?: string;
    author: string;
  };
  quotes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    quote: string;
    /**
     * Note:
     * This is a Foreign Key to `songs.id`.<fk table='songs' column='id'/>
     */
    song_id?: number;
  };
  songs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    title?: string;
    /**
     * Note:
     * This is a Foreign Key to `albums.id`.<fk table='albums' column='id'/>
     */
    album_id?: number;
    listen_url?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** albums */
  "body.albums": definitions["albums"];
  "rowFilter.albums.id": string;
  "rowFilter.albums.name": string;
  "rowFilter.albums.release_date": string;
  "rowFilter.albums.cover_url": string;
  "rowFilter.albums.author": string;
  /** quotes */
  "body.quotes": definitions["quotes"];
  "rowFilter.quotes.id": string;
  "rowFilter.quotes.quote": string;
  "rowFilter.quotes.song_id": string;
  /** songs */
  "body.songs": definitions["songs"];
  "rowFilter.songs.id": string;
  "rowFilter.songs.title": string;
  "rowFilter.songs.album_id": string;
  "rowFilter.songs.listen_url": string;
}

export interface operations {}

export interface external {}
